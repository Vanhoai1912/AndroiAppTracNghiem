import 'package:flutter/material.dart';
import 'settings_profile/notification_screen.dart';
import 'profile_screen.dart';


class HomeScreen extends StatelessWidget {
  const HomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final bool isLoggedIn = true;
    final String username = "L√™ Qu·ªëc ƒê·∫°i"; // thay b·∫±ng d·ªØ li·ªáu ng∆∞·ªùi d√πng

    // D·ªØ li·ªáu hi·ªán ƒëang tr·ªëng
    final List<Map<String, dynamic>> incompleteExams = [];
    final List<Map<String, dynamic>> incompleteAssignments = [];
    final List<Map<String, dynamic>> recentHistory = [];

    return Scaffold(
      backgroundColor: const Color(0xFFF6F8FA),
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        actions: [
          Padding(
            padding: const EdgeInsets.only(right: 10),
            child: Image.asset(
              "assets/images/vn_flag.png",
              width: 28,
              height: 25,
              fit: BoxFit.contain,
            ),
          ),
          IconButton(
            icon: const Icon(Icons.notifications_none, color: Colors.black87),
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => const NotificationScreen()),
              );
            },
          ),
          Padding(
            padding: const EdgeInsets.only(right: 16),
            child: GestureDetector(
              onTap: () {
                // üëâ N·∫øu ƒëƒÉng nh·∫≠p th√¨ chuy·ªÉn sang m√†n t√†i kho·∫£n
                if (isLoggedIn) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const ProfileScreen()),
                  );
                } else {
                  // üëâ N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, c√≥ th·ªÉ chuy·ªÉn ƒë·∫øn trang ƒëƒÉng nh·∫≠p n·∫øu c·∫ßn
                  // Navigator.push(context, MaterialPageRoute(builder: (_) => const LoginScreen()));
                }
              },
              child: CircleAvatar(
                backgroundColor: Colors.grey.shade300,
                child: isLoggedIn
                    ? Text(
                  username.split(' ').last.characters.first.toUpperCase(),
                  style: const TextStyle(color: Colors.black),
                )
                    : const Icon(Icons.person, color: Colors.black),
              ),
            ),
          ),

        ],
      ),
      body: ListView(
        padding: const EdgeInsets.all(16),
        children: [
          const SectionTitle(title: "ƒê·ªÅ thi ch∆∞a ho√†n th√†nh"),
          if (incompleteExams.isEmpty)
            const EmptyMessage(message: "Hi·ªán ch∆∞a c√≥ ƒë·ªÅ thi n√†o."),
          const SizedBox(height: 24),

          const SectionTitle(title: "B√†i t·∫≠p ch∆∞a ho√†n th√†nh"),
          if (incompleteAssignments.isEmpty)
            const EmptyMessage(message: "B·∫°n ch∆∞a c√≥ b√†i t·∫≠p n√†o c·∫ßn l√†m."),
          const SizedBox(height: 24),

          const SectionTitle(title: "L·ªãch s·ª≠ l√†m b√†i / N·ªôp b√†i"),
          if (recentHistory.isEmpty)
            const EmptyMessage(message: "Ch∆∞a c√≥ l·ªãch s·ª≠ l√†m b√†i."),
        ],
      ),

      floatingActionButton: FloatingActionButton(
        backgroundColor: const Color(0xff0052CC),
        foregroundColor: Colors.white,
        onPressed: () {},
        child: const Icon(Icons.qr_code),
      ),
    );
  }
}

// Widget: Ti√™u ƒë·ªÅ m·ª•c
class SectionTitle extends StatelessWidget {
  final String title;
  const SectionTitle({required this.title, super.key});

  @override
  Widget build(BuildContext context) {
    return Text(
      title,
      style:
      const TextStyle(fontSize: 18, fontWeight: FontWeight.bold, height: 1.8),
    );
  }
}

// Widget: Th√¥ng b√°o khi kh√¥ng c√≥ d·ªØ li·ªáu
class EmptyMessage extends StatelessWidget {
  final String message;
  const EmptyMessage({required this.message, super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      width: double.infinity,
      margin: const EdgeInsets.only(top: 12),
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: Colors.grey.shade300),
      ),
      child: Row(
        children: [
          const Icon(Icons.info_outline, color: Colors.grey),
          const SizedBox(width: 12),
          Expanded(
            child: Text(
              message,
              style: const TextStyle(color: Colors.black54),
            ),
          ),
        ],
      ),
    );
  }
}
